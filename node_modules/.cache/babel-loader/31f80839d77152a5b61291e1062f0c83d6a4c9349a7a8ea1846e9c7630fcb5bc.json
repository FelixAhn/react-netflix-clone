{"ast":null,"code":"var _jsxFileName = \"/Users/anhongseon/Documents/react-netflix-clone/src/components/Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nav = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 50) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n    navigate(`/search?q=${e.target.value}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `nav ${show && \"nav__black\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Netflix logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/220px-Netflix_2015_logo.svg.png\",\n      className: \"nav__logo\",\n      onClick: () => window.location.reload()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchValue,\n      onChange: handleChange,\n      className: \"nav__input\",\n      type: \"text\",\n      placeholder: \"\\uC601\\uD654\\uB97C \\uAC80\\uC0C9\\uD574 \\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"User logged\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\",\n      className: \"nav__avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Nav, \"Ww/MBT2g1O23ypNlDSfPztlsKjU=\", false, function () {\n  return [useNavigate];\n});\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Nav","_s","show","setShow","searchValue","setSearchValue","navigate","window","addEventListener","scrollY","removeEventListener","handleChange","e","target","value","className","children","alt","src","onClick","location","reload","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/anhongseon/Documents/react-netflix-clone/src/components/Nav.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\nimport { useNavigate } from \"react-router-dom\";\nconst Nav = () => {\n    const [show, setShow] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 50) {\n                setShow(true);\n            } else {\n                setShow(false);\n            }\n        });\n\n        return () => {\n            window.removeEventListener(\"scroll\", () => {});\n        };\n    }, []);\n\n    const handleChange = (e) => {\n        setSearchValue(e.target.value);\n        navigate(`/search?q=${e.target.value}`);\n    };\n\n    return (\n        <nav className={`nav ${show && \"nav__black\"}`}>\n            <img\n                alt=\"Netflix logo\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/220px-Netflix_2015_logo.svg.png\"\n                className=\"nav__logo\"\n                onClick={() => window.location.reload()}\n            />\n\n            <input\n                value={searchValue}\n                onChange={handleChange}\n                className=\"nav__input\"\n                type=\"text\"\n                placeholder=\"영화를 검색해 주세요.\"\n            ></input>\n\n            <img\n                alt=\"User logged\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png?20201013161117\"\n                className=\"nav__avatar\"\n            />\n        </nav>\n    );\n};\n\nexport default Nav;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZY,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACpC,IAAID,MAAM,CAACE,OAAO,GAAG,EAAE,EAAE;QACrBN,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAM;QACHA,OAAO,CAAC,KAAK,CAAC;MAClB;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTI,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAClD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBP,cAAc,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BR,QAAQ,CAAE,aAAYM,CAAC,CAACC,MAAM,CAACC,KAAM,EAAC,CAAC;EAC3C,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAG,OAAMb,IAAI,IAAI,YAAa,EAAE;IAAAc,QAAA,gBAC1CjB,OAAA;MACIkB,GAAG,EAAC,cAAc;MAClBC,GAAG,EAAC,iHAAiH;MACrHH,SAAS,EAAC,WAAW;MACrBI,OAAO,EAAEA,CAAA,KAAMZ,MAAM,CAACa,QAAQ,CAACC,MAAM,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEF1B,OAAA;MACIe,KAAK,EAAEV,WAAY;MACnBsB,QAAQ,EAAEf,YAAa;MACvBI,SAAS,EAAC,YAAY;MACtBY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAc;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAET1B,OAAA;MACIkB,GAAG,EAAC,aAAa;MACjBC,GAAG,EAAC,uFAAuF;MAC3FH,SAAS,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACxB,EAAA,CAjDID,GAAG;EAAA,QAIYH,WAAW;AAAA;AAAAgC,EAAA,GAJ1B7B,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}