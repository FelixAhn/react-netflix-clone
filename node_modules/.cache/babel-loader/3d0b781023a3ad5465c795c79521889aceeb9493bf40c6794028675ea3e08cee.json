{"ast":null,"code":"var _jsxFileName = \"/Users/anhongseon/Documents/react-netflix-clone/src/components/Row.js\",\n  _s = $RefreshSig$();\nimport axios from \"../api/axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport MovieModal from \"./MovieModal\";\n\n// Import Swiper React components\nimport { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  isLargeRow,\n  title,\n  id,\n  fetchUrl\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [movieSelected, setMovieSelected] = useState({});\n  useEffect(() => {\n    fetchMovieData();\n  }, []);\n  const fetchMovieData = async () => {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n  };\n  const handleClick = movie => {\n    setModalOpen(true);\n    setMovieSelected(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Navigation, Pagination, Scrollbar, A11y],\n      spaceBetween: 50,\n      slidesPerView: 5,\n      onSlideChange: () => console.log(\"slide change\"),\n      onSwiper: swiper => console.log(swiper),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: id,\n        className: \"row__posters\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: () => handleClick(movie),\n            className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n            src: `https://image.tmdb.org/t/p/original/${isLargeRow ? movie.poster_path : movie.backdrop_path} `,\n            loading: \"lazy\",\n            alt: movie.name\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(MovieModal, {\n      ...movieSelected,\n      setModalOpen: setModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"ARRKMuuqd4hR7xc6n0m8gpcgRM8=\");\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useEffect","useState","MovieModal","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","jsxDEV","_jsxDEV","Row","isLargeRow","title","id","fetchUrl","_s","movies","setMovies","modalOpen","setModalOpen","movieSelected","setMovieSelected","fetchMovieData","request","get","data","results","handleClick","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","modules","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","swiper","map","onClick","src","poster_path","backdrop_path","loading","alt","name","_c","$RefreshReg$"],"sources":["/Users/anhongseon/Documents/react-netflix-clone/src/components/Row.js"],"sourcesContent":["import axios from \"../api/axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport MovieModal from \"./MovieModal\";\n\n// Import Swiper React components\nimport { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\n// Import Swiper styles\nimport \"swiper/css\";\n\nexport default function Row({ isLargeRow, title, id, fetchUrl }) {\n    const [movies, setMovies] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [movieSelected, setMovieSelected] = useState({});\n\n    useEffect(() => {\n        fetchMovieData();\n    }, []);\n\n    const fetchMovieData = async () => {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results);\n    };\n\n    const handleClick = (movie) => {\n        setModalOpen(true);\n        setMovieSelected(movie);\n    };\n\n    return (\n        <section className=\"row\">\n            <h2>{title}</h2>\n            <Swiper\n                modules={[Navigation, Pagination, Scrollbar, A11y]}\n                spaceBetween={50}\n                slidesPerView={5}\n                onSlideChange={() => console.log(\"slide change\")}\n                onSwiper={(swiper) => console.log(swiper)}\n            >\n                <div id={id} className=\"row__posters\">\n                    {movies.map((movie) => (\n                        <SwiperSlide>\n                            <img\n                                key={movie.id}\n                                onClick={() => handleClick(movie)}\n                                className={`row__poster ${\n                                    isLargeRow && \"row__posterLarge\"\n                                }`}\n                                src={`https://image.tmdb.org/t/p/original/${\n                                    isLargeRow\n                                        ? movie.poster_path\n                                        : movie.backdrop_path\n                                } `}\n                                loading=\"lazy\"\n                                alt={movie.name}\n                            />\n                        </SwiperSlide>\n                    ))}\n                </div>\n            </Swiper>\n            {modalOpen && (\n                <MovieModal {...movieSelected} setModalOpen={setModalOpen} />\n            )}\n        </section>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA,SAASC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,IAAI,QAAQ,QAAQ;AAChE,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;;AAElD;AACA,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,GAAGA,CAAC;EAAEC,UAAU;EAAEC,KAAK;EAAEC,EAAE;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZuB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAACV,QAAQ,CAAC;IACzCG,SAAS,CAACM,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;EACnC,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC3BT,YAAY,CAAC,IAAI,CAAC;IAClBE,gBAAgB,CAACO,KAAK,CAAC;EAC3B,CAAC;EAED,oBACInB,OAAA;IAASoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBrB,OAAA;MAAAqB,QAAA,EAAKlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBzB,OAAA,CAACH,MAAM;MACH6B,OAAO,EAAE,CAACjC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,IAAI,CAAE;MACnD+B,YAAY,EAAE,EAAG;MACjBC,aAAa,EAAE,CAAE;MACjBC,aAAa,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE;MACjDC,QAAQ,EAAGC,MAAM,IAAKH,OAAO,CAACC,GAAG,CAACE,MAAM,CAAE;MAAAZ,QAAA,eAE1CrB,OAAA;QAAKI,EAAE,EAAEA,EAAG;QAACgB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAChCd,MAAM,CAAC2B,GAAG,CAAEf,KAAK,iBACdnB,OAAA,CAACF,WAAW;UAAAuB,QAAA,eACRrB,OAAA;YAEImC,OAAO,EAAEA,CAAA,KAAMjB,WAAW,CAACC,KAAK,CAAE;YAClCC,SAAS,EAAG,eACRlB,UAAU,IAAI,kBACjB,EAAE;YACHkC,GAAG,EAAG,uCACFlC,UAAU,GACJiB,KAAK,CAACkB,WAAW,GACjBlB,KAAK,CAACmB,aACf,GAAG;YACJC,OAAO,EAAC,MAAM;YACdC,GAAG,EAAErB,KAAK,CAACsB;UAAK,GAXXtB,KAAK,CAACf,EAAE;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYhB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACRhB,SAAS,iBACNT,OAAA,CAACR,UAAU;MAAA,GAAKmB,aAAa;MAAED,YAAY,EAAEA;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAACnB,EAAA,CAvDuBL,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}